plugins {
    id "org.jetbrains.kotlin.jvm" version "1.7.20"
}

apply plugin: 'kotlin'

group = 'sh.talonfox.vulpesloader'
version = "0.1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven { url = "https://repo.spongepowered.org/maven/" }
    maven { url = "https://maven.minecraftforge.net/" }
    maven { url = "https://libraries.minecraft.net/" }
    maven { url = "https://maven.enaium.cn" }
    maven { url = 'https://maven.fabricmc.net/' }
}

dependencies {
    implementation 'commons-io:commons-io:2.11.0'

    api('org.spongepowered:mixin:0.8.5')
    api 'org.ow2.asm:asm:9.4'
    api 'org.ow2.asm:asm-tree:9.4'
    api 'org.ow2.asm:asm-util:9.4'
    api 'org.ow2.asm:asm-commons:9.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.20"
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'cn.enaium:launchwrapper:1.3.0'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': "net.minecraft.launchwrapper.Launch"
        )
    }

    from {
        configurations.runtimeClasspath.collect {
            if(it.name.startsWith("kotlin") || it.name.startsWith("mixin") || it.name.startsWith("gson") || it.name.startsWith("asm") || it.name.startsWith("launchwrapper") || it.name.startsWith("joptsimple")) {
                return it.isDirectory() ? it : zipTree(it)
            }
            return null
        }
    }
    exclude("META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA", "LICENSE.txt", "module-info.class", "log4j2.xml")
}