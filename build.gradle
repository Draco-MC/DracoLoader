import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "org.jetbrains.kotlin.jvm" version "1.9.20"
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

apply plugin: 'kotlin'

group = 'sh.talonfloof.dracoloader'
version = "0.1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven { url = "https://repo.spongepowered.org/maven/" }
    maven { url = "https://maven.minecraftforge.net/" }
    maven { url = "https://libraries.minecraft.net/" }
    maven { url = 'https://maven.fabricmc.net/' }
    maven { url = 'https://jitpack.io' }
}

dependencies {
    implementation 'commons-io:commons-io:2.11.0'

    implementation "com.formdev:flatlaf:3.4.1"
    api('org.spongepowered:mixin:0.8.6')
    api ("io.github.llamalad7:mixinextras-common:0.3.5")
    implementation 'org.ow2.asm:asm:9.7'
    implementation 'org.ow2.asm:asm-tree:9.7'
    implementation 'org.ow2.asm:asm-util:9.7'
    implementation 'org.ow2.asm:asm-commons:9.7'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.20"
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.github.Draco-MC:LaunchWrapper:master-SNAPSHOT'
}

shadowJar {
    dependencies {
        exclude(dependency('commons-io:commons-io'))
        exclude(dependency('com.github.Draco-MC:LaunchWrapper'))
        include(dependency("com.formdev:flatlaf"))
        include(dependency("org.spongepowered:mixin"))
        include(dependency("io.github.llamalad7:mixinextras-common"))
        include(dependency('org.ow2.asm:asm'))
        include(dependency('org.ow2.asm:asm-tree'))
        include(dependency('org.ow2.asm:asm-util'))
        include(dependency('org.ow2.asm:asm-commons'))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8"))
        include(dependency('com.google.code.gson:gson'))
    }

}

kotlin {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_1_8)
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': "net.minecraft.launchwrapper.Launch"
        )
    }
}
